Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SC

Grammar

Rule 0     S' -> instance
Rule 1     instance -> cmt CLN variables extraLines
Rule 2     cmt -> DELTA SUB SAT WITH THE FLW BOX
Rule 3     cmt -> SLN
Rule 4     extraLines -> extraLines extra
Rule 5     extraLines -> extra
Rule 6     extra -> VAR CLN VAR
Rule 7     extra -> empty
Rule 8     empty -> <empty>
Rule 9     variables -> variables variable
Rule 10    variables -> variable
Rule 11    variable -> VAR CLN LB expr CM expr RB EQ LB expr CM expr RB
Rule 12    variable -> VAR CLN LB expr CM expr RB
Rule 13    expr -> expr ADD expr
Rule 14    expr -> expr SUB expr
Rule 15    expr -> expr MULT expr
Rule 16    expr -> expr DIV expr
Rule 17    expr -> expr POW expr
Rule 18    expr -> LP expr RP
Rule 19    expr -> SUB expr
Rule 20    expr -> range
Rule 21    range -> NUM
Rule 22    range -> RAT
Rule 23    range -> VAR

Terminals, with rules where they appear

ADD                  : 13
BOX                  : 2
CLN                  : 1 6 11 12
CM                   : 11 11 12
DELTA                : 2
DIV                  : 16
EQ                   : 11
FLW                  : 2
LB                   : 11 11 12
LP                   : 18
MULT                 : 15
NUM                  : 21
POW                  : 17
RAT                  : 22
RB                   : 11 11 12
RP                   : 18
SAT                  : 2
SC                   : 
SLN                  : 3
SUB                  : 2 14 19
THE                  : 2
VAR                  : 6 6 11 12 23
WITH                 : 2
error                : 

Nonterminals, with rules where they appear

cmt                  : 1
empty                : 7
expr                 : 11 11 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19
extra                : 4 5
extraLines           : 1 4
instance             : 0
range                : 20
variable             : 9 10
variables            : 1 9

Parsing method: LALR

state 0

    (0) S' -> . instance
    (1) instance -> . cmt CLN variables extraLines
    (2) cmt -> . DELTA SUB SAT WITH THE FLW BOX
    (3) cmt -> . SLN

    DELTA           shift and go to state 3
    SLN             shift and go to state 4

    instance                       shift and go to state 1
    cmt                            shift and go to state 2

state 1

    (0) S' -> instance .



state 2

    (1) instance -> cmt . CLN variables extraLines

    CLN             shift and go to state 5


state 3

    (2) cmt -> DELTA . SUB SAT WITH THE FLW BOX

    SUB             shift and go to state 6


state 4

    (3) cmt -> SLN .

    CLN             reduce using rule 3 (cmt -> SLN .)


state 5

    (1) instance -> cmt CLN . variables extraLines
    (9) variables -> . variables variable
    (10) variables -> . variable
    (11) variable -> . VAR CLN LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> . VAR CLN LB expr CM expr RB

    VAR             shift and go to state 9

    variables                      shift and go to state 7
    variable                       shift and go to state 8

state 6

    (2) cmt -> DELTA SUB . SAT WITH THE FLW BOX

    SAT             shift and go to state 10


state 7

    (1) instance -> cmt CLN variables . extraLines
    (9) variables -> variables . variable
    (4) extraLines -> . extraLines extra
    (5) extraLines -> . extra
    (11) variable -> . VAR CLN LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> . VAR CLN LB expr CM expr RB
    (6) extra -> . VAR CLN VAR
    (7) extra -> . empty
    (8) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 14
    $end            reduce using rule 8 (empty -> .)

  ! VAR             [ reduce using rule 8 (empty -> .) ]

    extraLines                     shift and go to state 11
    variable                       shift and go to state 12
    extra                          shift and go to state 13
    empty                          shift and go to state 15

state 8

    (10) variables -> variable .

    VAR             reduce using rule 10 (variables -> variable .)
    $end            reduce using rule 10 (variables -> variable .)


state 9

    (11) variable -> VAR . CLN LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR . CLN LB expr CM expr RB

    CLN             shift and go to state 16


state 10

    (2) cmt -> DELTA SUB SAT . WITH THE FLW BOX

    WITH            shift and go to state 17


state 11

    (1) instance -> cmt CLN variables extraLines .
    (4) extraLines -> extraLines . extra
    (6) extra -> . VAR CLN VAR
    (7) extra -> . empty
    (8) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (instance -> cmt CLN variables extraLines .)
    $end            reduce using rule 1 (instance -> cmt CLN variables extraLines .)
    VAR             shift and go to state 19

  ! VAR             [ reduce using rule 8 (empty -> .) ]
  ! $end            [ reduce using rule 8 (empty -> .) ]

    extra                          shift and go to state 18
    empty                          shift and go to state 15

state 12

    (9) variables -> variables variable .

    VAR             reduce using rule 9 (variables -> variables variable .)
    $end            reduce using rule 9 (variables -> variables variable .)


state 13

    (5) extraLines -> extra .

    VAR             reduce using rule 5 (extraLines -> extra .)
    $end            reduce using rule 5 (extraLines -> extra .)


state 14

    (11) variable -> VAR . CLN LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR . CLN LB expr CM expr RB
    (6) extra -> VAR . CLN VAR

    CLN             shift and go to state 20


state 15

    (7) extra -> empty .

    VAR             reduce using rule 7 (extra -> empty .)
    $end            reduce using rule 7 (extra -> empty .)


state 16

    (11) variable -> VAR CLN . LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN . LB expr CM expr RB

    LB              shift and go to state 21


state 17

    (2) cmt -> DELTA SUB SAT WITH . THE FLW BOX

    THE             shift and go to state 22


state 18

    (4) extraLines -> extraLines extra .

    VAR             reduce using rule 4 (extraLines -> extraLines extra .)
    $end            reduce using rule 4 (extraLines -> extraLines extra .)


state 19

    (6) extra -> VAR . CLN VAR

    CLN             shift and go to state 23


state 20

    (11) variable -> VAR CLN . LB expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN . LB expr CM expr RB
    (6) extra -> VAR CLN . VAR

    LB              shift and go to state 21
    VAR             shift and go to state 24


state 21

    (11) variable -> VAR CLN LB . expr CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN LB . expr CM expr RB
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 26
    range                          shift and go to state 29

state 22

    (2) cmt -> DELTA SUB SAT WITH THE . FLW BOX

    FLW             shift and go to state 32


state 23

    (6) extra -> VAR CLN . VAR

    VAR             shift and go to state 24


state 24

    (6) extra -> VAR CLN VAR .

    VAR             reduce using rule 6 (extra -> VAR CLN VAR .)
    $end            reduce using rule 6 (extra -> VAR CLN VAR .)


state 25

    (23) range -> VAR .

    CM              reduce using rule 23 (range -> VAR .)
    ADD             reduce using rule 23 (range -> VAR .)
    SUB             reduce using rule 23 (range -> VAR .)
    MULT            reduce using rule 23 (range -> VAR .)
    DIV             reduce using rule 23 (range -> VAR .)
    POW             reduce using rule 23 (range -> VAR .)
    RP              reduce using rule 23 (range -> VAR .)
    RB              reduce using rule 23 (range -> VAR .)


state 26

    (11) variable -> VAR CLN LB expr . CM expr RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN LB expr . CM expr RB
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38


state 27

    (19) expr -> SUB . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 39
    range                          shift and go to state 29

state 28

    (18) expr -> LP . expr RP
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 40
    range                          shift and go to state 29

state 29

    (20) expr -> range .

    CM              reduce using rule 20 (expr -> range .)
    ADD             reduce using rule 20 (expr -> range .)
    SUB             reduce using rule 20 (expr -> range .)
    MULT            reduce using rule 20 (expr -> range .)
    DIV             reduce using rule 20 (expr -> range .)
    POW             reduce using rule 20 (expr -> range .)
    RP              reduce using rule 20 (expr -> range .)
    RB              reduce using rule 20 (expr -> range .)


state 30

    (21) range -> NUM .

    CM              reduce using rule 21 (range -> NUM .)
    ADD             reduce using rule 21 (range -> NUM .)
    SUB             reduce using rule 21 (range -> NUM .)
    MULT            reduce using rule 21 (range -> NUM .)
    DIV             reduce using rule 21 (range -> NUM .)
    POW             reduce using rule 21 (range -> NUM .)
    RP              reduce using rule 21 (range -> NUM .)
    RB              reduce using rule 21 (range -> NUM .)


state 31

    (22) range -> RAT .

    CM              reduce using rule 22 (range -> RAT .)
    ADD             reduce using rule 22 (range -> RAT .)
    SUB             reduce using rule 22 (range -> RAT .)
    MULT            reduce using rule 22 (range -> RAT .)
    DIV             reduce using rule 22 (range -> RAT .)
    POW             reduce using rule 22 (range -> RAT .)
    RP              reduce using rule 22 (range -> RAT .)
    RB              reduce using rule 22 (range -> RAT .)


state 32

    (2) cmt -> DELTA SUB SAT WITH THE FLW . BOX

    BOX             shift and go to state 41


state 33

    (11) variable -> VAR CLN LB expr CM . expr RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN LB expr CM . expr RB
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 42
    range                          shift and go to state 29

state 34

    (13) expr -> expr ADD . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 43
    range                          shift and go to state 29

state 35

    (14) expr -> expr SUB . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 44
    range                          shift and go to state 29

state 36

    (15) expr -> expr MULT . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 45
    range                          shift and go to state 29

state 37

    (16) expr -> expr DIV . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 46
    range                          shift and go to state 29

state 38

    (17) expr -> expr POW . expr
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 47
    range                          shift and go to state 29

state 39

    (19) expr -> SUB expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 19 (expr -> SUB expr .)
    ADD             reduce using rule 19 (expr -> SUB expr .)
    SUB             reduce using rule 19 (expr -> SUB expr .)
    MULT            reduce using rule 19 (expr -> SUB expr .)
    DIV             reduce using rule 19 (expr -> SUB expr .)
    RP              reduce using rule 19 (expr -> SUB expr .)
    RB              reduce using rule 19 (expr -> SUB expr .)
    POW             shift and go to state 38

  ! POW             [ reduce using rule 19 (expr -> SUB expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 40

    (18) expr -> LP expr . RP
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    RP              shift and go to state 48
    ADD             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38


state 41

    (2) cmt -> DELTA SUB SAT WITH THE FLW BOX .

    CLN             reduce using rule 2 (cmt -> DELTA SUB SAT WITH THE FLW BOX .)


state 42

    (11) variable -> VAR CLN LB expr CM expr . RB EQ LB expr CM expr RB
    (12) variable -> VAR CLN LB expr CM expr . RB
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    RB              shift and go to state 49
    ADD             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38


state 43

    (13) expr -> expr ADD expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 13 (expr -> expr ADD expr .)
    ADD             reduce using rule 13 (expr -> expr ADD expr .)
    SUB             reduce using rule 13 (expr -> expr ADD expr .)
    RP              reduce using rule 13 (expr -> expr ADD expr .)
    RB              reduce using rule 13 (expr -> expr ADD expr .)
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38

  ! MULT            [ reduce using rule 13 (expr -> expr ADD expr .) ]
  ! DIV             [ reduce using rule 13 (expr -> expr ADD expr .) ]
  ! POW             [ reduce using rule 13 (expr -> expr ADD expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]


state 44

    (14) expr -> expr SUB expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 14 (expr -> expr SUB expr .)
    ADD             reduce using rule 14 (expr -> expr SUB expr .)
    SUB             reduce using rule 14 (expr -> expr SUB expr .)
    RP              reduce using rule 14 (expr -> expr SUB expr .)
    RB              reduce using rule 14 (expr -> expr SUB expr .)
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38

  ! MULT            [ reduce using rule 14 (expr -> expr SUB expr .) ]
  ! DIV             [ reduce using rule 14 (expr -> expr SUB expr .) ]
  ! POW             [ reduce using rule 14 (expr -> expr SUB expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]


state 45

    (15) expr -> expr MULT expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 15 (expr -> expr MULT expr .)
    ADD             reduce using rule 15 (expr -> expr MULT expr .)
    SUB             reduce using rule 15 (expr -> expr MULT expr .)
    MULT            reduce using rule 15 (expr -> expr MULT expr .)
    DIV             reduce using rule 15 (expr -> expr MULT expr .)
    RP              reduce using rule 15 (expr -> expr MULT expr .)
    RB              reduce using rule 15 (expr -> expr MULT expr .)
    POW             shift and go to state 38

  ! POW             [ reduce using rule 15 (expr -> expr MULT expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 46

    (16) expr -> expr DIV expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 16 (expr -> expr DIV expr .)
    ADD             reduce using rule 16 (expr -> expr DIV expr .)
    SUB             reduce using rule 16 (expr -> expr DIV expr .)
    MULT            reduce using rule 16 (expr -> expr DIV expr .)
    DIV             reduce using rule 16 (expr -> expr DIV expr .)
    RP              reduce using rule 16 (expr -> expr DIV expr .)
    RB              reduce using rule 16 (expr -> expr DIV expr .)
    POW             shift and go to state 38

  ! POW             [ reduce using rule 16 (expr -> expr DIV expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 47

    (17) expr -> expr POW expr .
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              reduce using rule 17 (expr -> expr POW expr .)
    ADD             reduce using rule 17 (expr -> expr POW expr .)
    SUB             reduce using rule 17 (expr -> expr POW expr .)
    MULT            reduce using rule 17 (expr -> expr POW expr .)
    DIV             reduce using rule 17 (expr -> expr POW expr .)
    RP              reduce using rule 17 (expr -> expr POW expr .)
    RB              reduce using rule 17 (expr -> expr POW expr .)
    POW             shift and go to state 38

  ! POW             [ reduce using rule 17 (expr -> expr POW expr .) ]
  ! ADD             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 48

    (18) expr -> LP expr RP .

    CM              reduce using rule 18 (expr -> LP expr RP .)
    ADD             reduce using rule 18 (expr -> LP expr RP .)
    SUB             reduce using rule 18 (expr -> LP expr RP .)
    MULT            reduce using rule 18 (expr -> LP expr RP .)
    DIV             reduce using rule 18 (expr -> LP expr RP .)
    POW             reduce using rule 18 (expr -> LP expr RP .)
    RP              reduce using rule 18 (expr -> LP expr RP .)
    RB              reduce using rule 18 (expr -> LP expr RP .)


state 49

    (11) variable -> VAR CLN LB expr CM expr RB . EQ LB expr CM expr RB
    (12) variable -> VAR CLN LB expr CM expr RB .

    EQ              shift and go to state 50
    VAR             reduce using rule 12 (variable -> VAR CLN LB expr CM expr RB .)
    $end            reduce using rule 12 (variable -> VAR CLN LB expr CM expr RB .)


state 50

    (11) variable -> VAR CLN LB expr CM expr RB EQ . LB expr CM expr RB

    LB              shift and go to state 51


state 51

    (11) variable -> VAR CLN LB expr CM expr RB EQ LB . expr CM expr RB
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 52
    range                          shift and go to state 29

state 52

    (11) variable -> VAR CLN LB expr CM expr RB EQ LB expr . CM expr RB
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    CM              shift and go to state 53
    ADD             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38


state 53

    (11) variable -> VAR CLN LB expr CM expr RB EQ LB expr CM . expr RB
    (13) expr -> . expr ADD expr
    (14) expr -> . expr SUB expr
    (15) expr -> . expr MULT expr
    (16) expr -> . expr DIV expr
    (17) expr -> . expr POW expr
    (18) expr -> . LP expr RP
    (19) expr -> . SUB expr
    (20) expr -> . range
    (21) range -> . NUM
    (22) range -> . RAT
    (23) range -> . VAR

    LP              shift and go to state 28
    SUB             shift and go to state 27
    NUM             shift and go to state 30
    RAT             shift and go to state 31
    VAR             shift and go to state 25

    expr                           shift and go to state 54
    range                          shift and go to state 29

state 54

    (11) variable -> VAR CLN LB expr CM expr RB EQ LB expr CM expr . RB
    (13) expr -> expr . ADD expr
    (14) expr -> expr . SUB expr
    (15) expr -> expr . MULT expr
    (16) expr -> expr . DIV expr
    (17) expr -> expr . POW expr

    RB              shift and go to state 55
    ADD             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    POW             shift and go to state 38


state 55

    (11) variable -> VAR CLN LB expr CM expr RB EQ LB expr CM expr RB .

    VAR             reduce using rule 11 (variable -> VAR CLN LB expr CM expr RB EQ LB expr CM expr RB .)
    $end            reduce using rule 11 (variable -> VAR CLN LB expr CM expr RB EQ LB expr CM expr RB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 7 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (instance -> cmt CLN variables extraLines)
WARNING: rejected rule (empty -> <empty>) in state 11
